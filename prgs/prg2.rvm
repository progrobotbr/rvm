class sec
beg
  int res
  int aa[]

  --****************************
  --Definição de função nativa
  --
  --****************************
  defnative int calc5(int i)

  def int[] calc3(int o1[]) beg
    int o2
    o2 = 1
    o2 = 10
    aa = newarray(int,10)
    aa[ o2 ] = 10 + 3
    res = aa[o2]
    --CALC5(O2,1)
    return(aa)
  enddef
 
  def int calc2(int p1, int p2) beg
    object(prim) obj
    int a
    int a1[]
    int b[]
    a1=newarray(int,2)
    obj = new prim
    b = a1

    if (p1 > a1[1]) beg
      p2 = 3
    else
      p2 = a1[1]
    endif

    a=1
    while(a<10) beg
      a=a+1
      if(a<5) beg
        break
      endif
      a=a-2
    endwhile

    calc3(b)
    obj.res = calc2(obj.res,obj.calc(obj.calc(a,a),a))
    a1[1] = 2
    obj.calc(P1,2)
    return(10)

  enddef

  def int[] teste() beg
    int rr[]
    return(rr)
  enddef

 -- def int[] teste2() beg
 --   int aaa[1]
 --   int i
    --i = 19
	--aaa=newarray(int,1)
	--aaa[1] = i
    return(aaa)
 -- enddef

  

endclass

class ter
beg

  def int tercalc(int i, int z) beg
    return(i+z)
  enddef

endclass

class ter1
beg

  def int tercalc1(int i, int z) beg
    object(ter) tt
    tt = new ter
    tt.tercalc(10,4)
    return(i+z)
  enddef

endclass




class sec
beg
  int res
  int aa[]

  --****************************
  --Definição de função nativa
  --****************************
  defnative int calc5(int i)

  --
  --Retorno e parâmetro com arrays
  --
  def int[] calc3(int o1[]) beg
    int o2
    o2 = 1
    o2 = 10
    aa = newarray(int,10)
    aa[ o2 ] = 10 + 3
    res = aa[o2]
    --CALC5(O2,1)
    return(aa)
  enddef
 
  def int calc2(int p1, int p2) beg
    object(prim) obj
    int a
    int a1[]
    int b[]
    a1=newarray(int,2)
    obj = new prim
    b = a1

    if (p1 > a1[1]) beg
      p2 = 3
    else
      p2 = a1[1]
    endif

    a=1
    while(a<10) beg
      a=a+1
      if(a<5) beg
        break
      endif
      a=a-2
    endwhile

    calc3(b)
    obj.res = calc2(obj.res,obj.calc(obj.calc(a,a),a))
    a1[1] = 2
    obj.calc(P1,2)
    return(10)

  enddef

  def object(prim) teste() beg
    int rr[]
    object(prim) tt
    tt = new prim
    return(tt)
  enddef

  def int[] teste2() beg
    object(ter1) tt
    int i
    int c[]
    int a[]
    a = newarray(int,10)
    i = 19
    return(c)
  enddef

  

endclass
